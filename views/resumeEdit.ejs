<% layout('layouts/boilerplate') %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="/style/resume.css">

<form id="uploadForm" action="/resume?_method=PUT" method="POST" enctype="multipart/form-data" >
    <section class="h-auto flex flex-col items-center justify-center py-8">    
        <div class="resume-section grid grid-cols-3 bg-white shadow-lg " style="width: 794px; height: 1121px;">
            <div class="left-section col-span-1 bg-gray-700 flex flex-col">                                    
                <div class="profileImg-section slider-container relative overflow-hidden w-full" style="height: 33.33%;">
                            <div class="slider flex transition-transform duration-500 ease-in-out w-full h-full" >
                                <% if (resume.images.length>0) { %>
                                    <% resume.images.forEach(img => { %>
                                   <img src="<%= img.path %>" alt="<%= img._id %>" class="oldImg myProfileImgs w-full object-cover" style="height: 100%;">
                                    <% }); %>
                                <% } else { %>
                                    <img src="https://res.cloudinary.com/di70a5gqx/image/upload/v1725698483/Resume/waxtyckb4h9cwuqps1bq.jpg" alt="" class="oldImg myProfileImgs w-full object-cover" style="height: 100%;">
                                <% } %>                                
                            </div>                        
                            <button type="button" id="prevBtn" class="profileImgBtn h-full absolute left-0 top-1/2 transform -translate-y-1/2 bg-gray-700 text-4xl text-white p-8 ">
                                &#10094;
                            </button>
                            <button type="button" id="nextBtn" class="profileImgBtn h-full absolute right-0 top-1/2 transform -translate-y-1/2 bg-gray-700 text-4xl text-white p-8 ">
                                &#10095;
                            </button>
                            <button type="button" id="deleteImgBtn"  class="absolute bottom-1 bg-red-500 text-white font-bold p-2 rounded-full" style="opacity: 0.75; right: 3.25rem">
                                üóëÔ∏è
                            </button>                    
                            <button type="button" class="absolute bottom-1 bg-blue-500 rounded-full p-2 shadow-2xl hover:bg-blue-600 focus:outline-none" style="opacity: 0.75; right: 0.25rem">
                                <input type="file" name="profileImgs" id="profileImgs" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" multiple>
                                <img src="/img/UploadIcon.png" alt="Upload" class="w-6 h-6 pb-1">
                            </button>
                             
                </div>                      
                <div class="personalInfo-section mt-2">
                    <div class="flex items-center p-2">
                        <i class="fas fa-phone text-2xl text-green-500 mr-2 bg-white p-2 rounded-full"></i>
                        <input 
                            name="resume[phoneNumber]" 
                            value="<%= resume.phoneNumber %>" 
                            id="phone" type="tel" 
                            placeholder="123-456-7890" 
                            class="inputBG rounded-md w-full border-none focus:outline-none focus:ring-0" 
                            pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" oninput="formatPhoneNumber(this)" 
                            maxlength="12" 
                        />
                    </div>
                    <div class="flex items-center p-2">
                        <i class="fas fa-envelope text-2xl text-green-500 mr-2 bg-white p-2 rounded-full"></i>
                        <input 
                            name="resume[email]" 
                            value="<%= resume.email %>" 
                            id="email" 
                            type="email"  
                            placeholder="example@example.com"  
                            class="inputBG rounded-md w-full border-none focus:outline-none focus:ring-0" 
                        />
                    </div>
                    <div class="flex items-center p-2">
                        <i class="fab fa-github text-2xl text-green-500 mr-2 bg-white p-2 rounded-full"></i>
                        <input 
                            name="resume[gitHub]" 
                            value="<%= resume.gitHub %>" 
                            id="github" 
                            type="url"
                            placeholder="https://github.com/yourusername"
                            class="inputBG rounded-md w-full border-none focus:outline-none focus:ring-0"
                            pattern="https?://(www\.)?github\.com/.*"  
                        />
                    </div>
                    <div class="flex items-center p-2">
                        <a href="https://www.google.com/maps/search/?api=1&query=<%= encodeURIComponent(resume.address) %>" target="_blank" class="mr-2 bg-white p-2 rounded-xl border-2 border-red-500 shadow-lg flex button">
                            <i class="fas fa-map-marker-alt text-2xl text-red-500"></i>
                        </a>                                                                        
                        <input 
                            name="resume[address]" 
                            value="<%= resume.address %>" 
                            id="address" 
                            type="text" 
                            placeholder="Enter your address"  
                            class="inputBG rounded-md w-full border-none focus:outline-none focus:ring-0"
                        />
                    </div>
                                        
                </div>
                <div class="education-section px-2">
                    <h1 class="text-2xl text-white">Education</h1>
                    <div class="">
                        <label for="institution" class="block text-sm font-medium text-white">Institution</label>
                        <input 
                            type="text" 
                            name="resume[education][0][institution]" 
                            id="institution" 
                            placeholder="Enter the institution name" 
                            class="inputBG block w-full rounded-md shadow-sm" 
                            value="<%= resume.education[0].institution %>"
                        />
                    </div>
                    <div class="">
                        <label for="major" class="block text-sm font-medium text-white">Major</label>
                        <input 
                            type="text" 
                            name="resume[education][0][major]" 
                            id="major" 
                            placeholder="Enter the major" 
                            class="inputBG block w-full rounded-md shadow-sm" 
                            value="<%= resume.education[0].major %>"
                        />
                    </div>
                    <div class="">
                        <label for="degree" class="block text-sm font-medium text-white">Degree</label>
                        <input 
                            type="text" 
                            name="resume[education][0][degree]" 
                            id="degree" 
                            placeholder="Enter the degree" 
                            class="inputBG block w-full rounded-md shadow-sm"
                            value="<%= resume.education[0].degree %>"
                        />
                    </div>
                    <div class="">
                        <label for="gradYear" class="block text-sm font-medium text-white">Graduation Year</label>
                        <input 
                            type="number" 
                            name="resume[education][0][gradYear]" 
                            id="gradYear" 
                            placeholder="Enter the graduation year" 
                            class="inputBG block w-full rounded-md shadow-sm" 
                            value="<%= resume.education[0].gradYear %>"
                        />
                    </div>
                </div>
                <div class="language-section p-2 ">
                    <div class="flex space-x-4">
                        <h1 class="text-2xl text-white ">Language Skills</h1>
                        <button type="button" class="bg-gray-400 text-white px-2 rounded-md font-bold text-xl" onclick="addLanguage()">+</button>
                    </div>
                    <div id="languageSkills" class="flex flex-col space-y-2">
                        <% if (resume.languageSkill.length>0) { %>                                
                            <% resume.languageSkill.forEach((lang, index) => { %>
                                <div class="langCon flex items-center space-x-2">
                                    <div>
                                        <% if (index === 0) { %>
                                            <label for="language<%= index %>" class="block text-sm font-medium text-white">Language</label>
                                        <% } %>
                                        <div class="input-wrapper relative">
                                            <input 
                                            type="text" 
                                            name="resume[languageSkill][<%= index %>][language]" 
                                            id="language<%= index %>" 
                                            placeholder="language" 
                                            class="inputBG block w-full rounded-md shadow-sm"
                                            value="<%= lang.language %>"
                                            data-index="<%= index %>"
                                        />
                                        <button type="button" class="delete-lang delete-btn text-white text-xs">
                                            &#10006;
                                        </button>
                                        </div>                                        
                                    </div>
                                    <div>
                                        <% if (index === 0) { %>
                                            <label class="block text-sm font-medium text-white">Rating</label>
                                        <% } %>
                                        <div class="battery-rating flex rounded-md overflow-hidden bg-white" style="border: 4px solid rgba(0, 0, 0, 0.8);">
                                            <% for (let i = 1; i <= 10; i++) { %>
                                                <div 
                                                    class="w-3 h-10 border border-gray-700 bg-gray-100 button battery-block
                                                        <% if (lang.rating >= i) { %>
                                                            <%= i === 1 ? 'bg-red-700' : '' %>
                                                            <%= i === 2 ? 'bg-red-600' : '' %>
                                                            <%= i === 3 ? 'bg-red-500' : '' %>
                                                            <%= i === 4 ? 'bg-yellow-300' : '' %>
                                                            <%= i === 5 ? 'bg-yellow-200' : '' %>
                                                            <%= i === 6 ? 'bg-yellow-100' : '' %>
                                                            <%= i === 7 ? 'bg-green-300' : '' %>
                                                            <%= i === 8 ? 'bg-green-400' : '' %>
                                                            <%= i === 9 ? 'bg-green-500' : '' %>
                                                            <%= i === 10 ? 'bg-green-600' : '' %>
                                                        <% } %>" 
                                                    data-rating="<%= i %>">
                                                </div>
                                            <% } %>
                                        </div>
                                                                                
                                        <input 
                                            type="hidden" 
                                            name="resume[languageSkill][<%= index %>][rating]" 
                                            id="rating-hidden-<%= index %>" 
                                            value="<%= lang.rating %>"
                                        />
                                    </div>
                                </div>                                    
                            <% }); %>
                        <% } else { %>
                            
                        <% } %>
                    </div>
                </div>
            </div>
            <div class="right-section col-span-2 flex flex-col" style="background-image: url(/img/background.jpg);background-size: cover; background-position: center; background-repeat: no-repeat;">
                <div class="name-section w-auto p-4">
                    <input 
                        name="resume[name]" 
                        value="<%= resume.name %>" 
                        id="nameInput" 
                        type="text" 
                        placeholder="Enter your name" 
                        class="inputBG rounded-md w-full text-4xl font-bold" 
                        maxlength="50" 
                    />
                </div>
                <div class="lookingFor-section px-4">
                    <h2 class="block text-lg font-medium text-white font-bold">Looking for</h2>
                    <div class="grid grid-cols-3 gap-x-2" id="lookingForCon">
                        <% resume.lookingFor.forEach((job, index) => { %>
                            <input 
                                    type="text" 
                                    name="resume[lookingFor][<%= index %>][position]" 
                                    id="position-<%= index %>" 
                                    value="<%= job.position %>" 
                                    placeholder="Enter position" 
                                    class="inputBG block w-full rounded-md shadow-sm font-bold"
                                >
                        <% }) %>
                    
                        <!-- Add more positions button -->
                        <button id="addPositionBtn" type="button" class="flex justify-center items-center text-white text-xl py-2 rounded-md shadow-lg" style="background-color: rgb(59, 130, 246, 0.8);">Add</button>
    
                    </div>
                </div>
                <div class="introduction-section px-4 mt-2">
                    <!-- Introduction field -->
                    <label for="introduction" class="block text-lg font-medium text-white">Introduction</label>
                    <textarea 
                        name="resume[introduction]" 
                        id="introduction" 
                        rows="1" 
                        placeholder="Write a brief introduction about yourself" 
                        class="inputBG rounded-md w-full p-2 text-lg shadow-sm font-bold"
                        maxlength="750"
                        style="overflow: hidden"
                        oninput="autoResize(this)"
                    ><%= resume.introduction %></textarea>
                </div>
                <div class="skill-section px-4 mt-2">
                    <h2 class="block text-lg font-medium text-white font-bold">Skills</h2>
                    <div id="skillsContainer" class="grid grid-cols-3">
                        <% resume.skills.forEach((skill, index) => { %>
                            <div class="skill-entry">
                                <!-- Skill Name -->
                                <input 
                                    type="text" 
                                    name="resume[skills][<%= index %>][skill]" 
                                    value="<%= skill.skill %>" 
                                    placeholder="Enter skill" 
                                    class="inputBG block w-full rounded-md shadow-sm font-bold"
                                >
                                <div class="grid grid-cols-10 battery-rating flex rounded-md overflow-hidden bg-white" style="border: 4px solid rgba(0, 0, 0, 0.8);">
                                    <% for (let i = 1; i <= 10; i++) { %>
                                        <div 
                                            class="h-10 border border-gray-700 bg-gray-100 button battery-block
                                                <% if (skill.rating >= i) { %>
                                                    <%= i === 1 ? 'bg-red-700' : '' %>
                                                    <%= i === 2 ? 'bg-red-600' : '' %>
                                                    <%= i === 3 ? 'bg-red-500' : '' %>
                                                    <%= i === 4 ? 'bg-yellow-300' : '' %>
                                                    <%= i === 5 ? 'bg-yellow-200' : '' %>
                                                    <%= i === 6 ? 'bg-yellow-100' : '' %>
                                                    <%= i === 7 ? 'bg-green-300' : '' %>
                                                    <%= i === 8 ? 'bg-green-400' : '' %>
                                                    <%= i === 9 ? 'bg-green-500' : '' %>
                                                    <%= i === 10 ? 'bg-green-600' : '' %>
                                                <% } %>" 
                                            data-rating="<%= i %>">
                                        </div>
                                    <% } %>
                                </div>
                                <!-- Skill Rating -->
                                <input 
                                    type="number" 
                                    name="resume[skills][<%= index %>][rating]" 
                                    value="<%= skill.rating %>" 
                                    min="1" 
                                    max="10" 
                                    placeholder="Rating (0-5)" 
                                    class="inputBG block w-full rounded-md shadow-sm mt-2 hidden"
                                >
                            </div>
                        <% }) %>
                        <button id="addSkillBtn" type="button" class="flex justify-center items-center text-white text-xl py-2 rounded-md shadow-lg" style="background-color: rgb(59, 130, 246, 0.7);">
                            Add Skill
                        </button>
                    </div>
                    
                </div>
                
            </div>
        </div>
        <div class="processBtn-section mt-8 ">
            <button type="button" class="mx-4 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded-full focus:outline-none focus:shadow-outline">
                Cancel
            </button>              
            <button type="submit" class="mx-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full focus:outline-none focus:shadow-outline">
                Submit
            </button>
        </div>        
    </section>>          
</form>
<form id="deleteImgForm" action="/resume" method="post"></form>
<script>
    document.getElementById('profileImgs').addEventListener('change', function(event) {
        const slider = document.querySelector('.slider');
        const images = document.querySelectorAll('.slider .oldImg');
        const preImgs = document.querySelectorAll('.slider .preImg');        
        const files = event.target.files;
        Array.from(files).forEach(file => {
            const reader = new FileReader();
            reader.onload = function(e) {
                const img = document.createElement('img');
                img.src = e.target.result;
                img.className = 'preImg myProfileImgs w-full object-cover';
                img.style.height = '100%';
                slider.appendChild(img);
                console.log(`Appended image for file: ${file.name}`);
            }
            reader.readAsDataURL(file); 
        });
        if (images.length > 0) {            
            currentIndex = images.length + preImgs.length;
            slider.style.transform = `translateX(-${currentIndex * 100}%)`;
        } 
    });
</script>
<script>
    let currentIndex = 0;

    document.getElementById('nextBtn').addEventListener('click', () => {
        const slider = document.querySelector('.slider');
        const images = document.querySelectorAll('.slider img');
        const totalImages = images.length;  

        if (currentIndex < totalImages - 1) {
            currentIndex++;
        } else {
            currentIndex = 0;
        }
        slider.style.transform = `translateX(-${currentIndex * 100}%)`;
    });

    document.getElementById('prevBtn').addEventListener('click', () => {
        const slider = document.querySelector('.slider');
        const images = document.querySelectorAll('.slider img');
        const totalImages = images.length;

        if (currentIndex > 0) {
            currentIndex--;
        } else {
            currentIndex = totalImages - 1;
        }
        slider.style.transform = `translateX(-${currentIndex * 100}%)`;
    });

    document.getElementById('deleteImgBtn').addEventListener('click', () => {
        const images = document.querySelectorAll('.slider img');
        
        if (images[currentIndex].classList.contains('preImg')) {
            const slider = document.querySelector('.slider');
            const preImgs = document.querySelectorAll('.slider .preImg');
            const fileInput = document.getElementById('profileImgs');            
            const files = fileInput.files;
            const fileIndex = currentIndex - (images.length - files.length);
            const dataTransfer = new DataTransfer();

            for (let i = 0; i < files.length; i++) {
                if (i !== fileIndex) {
                    dataTransfer.items.add(files[i]); // Add all files except the one to remove
                }
            }

            if (currentIndex > 0) {
                currentIndex--;
                slider.style.transform = `translateX(-${currentIndex * 100}%)`;
            } 
            
            fileInput.files = dataTransfer.files;            

            preImgs[fileIndex].remove();
        } else {           
            const deleteImgForm = document.getElementById('deleteImgForm');         

            deleteImgForm.action = '/resume/'+images[currentIndex].alt+'?_method=DELETE';     
            deleteImgForm.submit();

            /* fetch('/resume/'+images[currentIndex].alt+'?_method=DELETE', {
            method: 'post',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: 'your-item-id' })  // Optional: Pass any data if needed            
            })            
            .then(response => {
                if (response.ok) {
                    console.log('Item deleted');                
                } else {
                    console.error('Failed to delete');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
             */
        }       
    });

</script>
<script>
    function formatPhoneNumber(input) {
      let value = input.value.replace(/\D/g, ''); // Remove all non-numeric characters
      let formattedValue = '';
    
      if (value.length > 0) {
        formattedValue += value.substring(0, 3); // First 3 digits
      }
      if (value.length > 3) {
        formattedValue += '-' + value.substring(3, 6); // Next 3 digits
      }
      if (value.length > 6) {
        formattedValue += '-' + value.substring(6, 10); // Last 4 digits
      }
    
      input.value = formattedValue;
    }

</script>
<script>    
    function addLanguage() {
        const languageCount = document.querySelectorAll('.langCon').length;
        const container = document.getElementById('languageSkills');
        const newLanguageDiv = document.createElement('div');
        newLanguageDiv.classList.add('langCon', 'mb-4', 'flex', 'items-center', 'space-x-2');
    
        newLanguageDiv.innerHTML = `
                <div>
                    <div class="input-wrapper relative">
                        <input 
                        type="text" 
                        name="resume[languageSkill][${languageCount}][language]" 
                        id="language-${languageCount}" 
                        placeholder="Language"
                        data-index="${languageCount}" 
                        class="inputBG block w-full rounded-md shadow-sm"
                        />                    
                        <button type="button" class="delete-lang delete-btn text-white text-xs">
                            &#10006;
                        </button>
                    </div>                                  
                </div>
                <div>
                    <div class="battery-rating flex rounded-md overflow-hidden bg-white" style="border: 4px solid rgba(0, 0, 0, 0.8);">
                    ${[...Array(10)].map((_, i) => `
                        <div 
                            class="w-3 h-10 border border-gray-700 bg-gray-100 button battery-block"                            
                            data-rating="${i + 1}"
                            style="cursor: pointer;">
                        </div>
                    `).join('')}
                    </div>                                
                    <input 
                        type="hidden" 
                        name="resume[languageSkill][${languageCount}][rating]" 
                        id="rating-hidden-${languageCount}" 
                        placeholder="1-10" 
                        min="1" 
                        max="10"
                        class="rating-input block w-24 rounded-md border-gray-300 shadow-sm"
                    />
                </div>            
        `;
            
        container.appendChild(newLanguageDiv); 

        // Add event listeners for rating blocks
        const ratingBlocks = newLanguageDiv.querySelectorAll('.battery-block');
        const ratingInput = newLanguageDiv.querySelector('.rating-input');
    
        ratingBlocks.forEach(block => {
            block.addEventListener('click', function() {
                const ratingValue = this.getAttribute('data-rating');
                ratingInput.value = ratingValue; // Update hidden input with selected rating
    
                // Update the visual appearance of the blocks based on rating
                ratingBlocks.forEach((b, idx) => {
                    if (idx + 1 <= ratingValue) {
                        b.classList.remove('bg-gray-100');
                        b.classList.add(getColorForRating(idx + 1));
                    } else {
                        b.classList.remove(getColorForRating(idx + 1));
                        b.classList.add('bg-gray-100');
                    }
                });
            });
        });
    
        // Function to get color based on rating
        function getColorForRating(rating) {
            if (rating === 1) return 'bg-red-700';
            if (rating === 2) return 'bg-red-600';
            if (rating === 3) return 'bg-red-500';
            if (rating === 4) return 'bg-yellow-300';
            if (rating === 5) return 'bg-yellow-200';
            if (rating === 6) return 'bg-yellow-100';
            if (rating === 7) return 'bg-green-300';
            if (rating === 8) return 'bg-green-400';
            if (rating === 9) return 'bg-green-500';
            if (rating === 10) return 'bg-green-600';
            return '';
        }
    }
    document.getElementById('languageSkills').addEventListener('click', function(event) {
    // Check if the clicked element has the class 'delete-lang'
        if (event.target && event.target.classList.contains('delete-lang')) {
            // Find the closest parent element with the class 'langCon'
            const langConTarget = event.target.closest('.langCon');
            
            if (langConTarget) {
                langConTarget.remove(); // Remove the .langCon element from the DOM

                const langCons = document.querySelectorAll('.langCon'); // Select all remaining language divs
                console.log(langCons.length);
                
                langCons.forEach((langCon, newIndex) => {                
                    // Update id and name for the language input
                    const langInput = langCon.querySelector('input[type="text"]');
                    langInput.id = `language${newIndex}`;
                    langInput.name = `resume[languageSkill][${newIndex}][language]`;
                    langInput.setAttribute('data-index', newIndex);               

                    // Update id and name for the hidden rating input
                    const ratingInput = langCon.querySelector('input[type="hidden"]');
                    ratingInput.id = `rating-hidden-${newIndex}`;
                    ratingInput.name = `resume[languageSkill][${newIndex}][rating]`;
                });
            }
        }
    });    
</script>
<script>
    document.querySelectorAll('.battery-rating').forEach(ratingContainer => {
        ratingContainer.addEventListener('click', function(e) {
            if (e.target.classList.contains('battery-block')) {
                const rating = e.target.getAttribute('data-rating');
                const blocks = ratingContainer.querySelectorAll('.battery-block');

                const colorClasses = [
                    'bg-red-700',   // index 0
                    'bg-red-600',   // index 1
                    'bg-red-500',   // index 2
                    'bg-yellow-300', // index 3
                    'bg-yellow-200', // index 4
                    'bg-yellow-100', // index 5
                    'bg-green-300', // index 6
                    'bg-green-400', // index 7
                    'bg-green-500', // index 8
                    'bg-green-600'  // index 9
                ];

                blocks.forEach((block, index) => {
                    block.classList.remove('bg-gray-100', ...colorClasses); // Remove all color classes
                    if (index < rating) {
                        block.classList.add(colorClasses[index]); // Add the corresponding color class based on index
                    } else {
                        block.classList.add('bg-gray-100'); // If the index is greater than or equal to the rating, set gray
                    }
                });

                /* blocks.forEach((block, index) => {
                    if (index < rating) {
                        block.classList.remove('bg-gray-100');
                        if (index === 0) {
                            block.classList.add('bg-red-500');
                        } else if (index === 1) {
                            block.classList.add('bg-red-400');
                        } else if (index === 2) {
                            block.classList.add('bg-red-300');
                        } else if (index === 3) {
                            block.classList.add('bg-yellow-400');
                        } else if (index === 4) {
                            block.classList.add('bg-yellow-300');
                        } else if (index === 5) {
                            block.classList.add('bg-yellow-200');
                        } else if (index === 6) {
                            block.classList.add('bg-green-200');
                        } else if (index === 7) {
                            block.classList.add('bg-green-300');
                        } else if (index === 8) {
                            block.classList.add('bg-green-400');
                        } else if (index === 9) {
                            block.classList.add('bg-green-500');
                        }
                    } else {
                        block.classList.remove('bg-green-500');
                        block.classList.add('bg-gray-100');
                    }
                }); */

                // Update the hidden input value
                const hiddenInput = ratingContainer.nextElementSibling;
                hiddenInput.value = rating;
            }
        });
    });
</script>
<script>
    document.getElementById('addPositionBtn').addEventListener('click', function() {
        const container = document.createElement('div');
        
        const index = document.querySelectorAll('input[name^="resume[lookingFor]"]').length;
        
        const input = document.createElement('input');
        input.type = 'text';
        input.name = `resume[lookingFor][${index}][position]`;
        input.id = `position-${index}`;
        input.placeholder = 'Enter position';
        input.className = 'inputBG block w-full rounded-md shadow-sm font-bold';
        
        
        container.appendChild(input);
        
        document.getElementById('lookingForCon').insertBefore(container, document.getElementById('addPositionBtn'));
    });
</script>
<script>
    window.onload = function() {
    const introductionTextarea = document.getElementById('introduction');
        if (introductionTextarea) {
            autoResize(introductionTextarea); // Run autoResize on page load for the introduction field
        }
    };
    function autoResize(textarea) {
        textarea.style.height = 'auto'; // Reset height
        textarea.style.height = textarea.scrollHeight + 'px'; // Set height to match content
    }
</script>
<script>
    document.getElementById('addSkillBtn').addEventListener('click', function() {
        const container = document.getElementById('skillsContainer');
        const addSkillBtn = document.getElementById('addSkillBtn');
        const newIndex = container.querySelectorAll('.skill-entry').length;
    
        // Create a new skill entry div
        const newSkill = document.createElement('div');
        newSkill.classList.add('skill-entry');
        newSkill.innerHTML = `            
            <!-- Skill Name -->
                <input 
                    type="text" 
                    name="resume[skills][${newIndex}][skill]" 
                    id="skill-${newIndex}"
                    placeholder="Enter skill" 
                    class="inputBG block w-full rounded-md shadow-sm font-bold"
                >
                
                <!-- Skill Rating -->
                <div class="grid grid-cols-10 battery-rating flex rounded-md overflow-hidden bg-white" style="border: 4px solid rgba(0, 0, 0, 0.8);">
                    ${[...Array(10)].map((_, i) => `
                        <div 
                            class="h-10 border border-gray-700 bg-gray-100 battery-block"
                            data-rating="${i + 1}"
                            style="cursor: pointer;">
                        </div>
                    `).join('')}
                </div>
    
                <!-- Hidden numeric input for the rating -->
                <input 
                    type="number" 
                    name="resume[skills][${newIndex}][rating]" 
                    id="rating-${newIndex}" 
                    min="1" 
                    max="10"
                    placeholder="Rating (1-10)" 
                    class="inputBG block w-full rounded-md shadow-sm hidden rating-input"
                >
        `;
    
        // Insert new skill entry before the "Add Skill" button
        container.insertBefore(newSkill, addSkillBtn);
    
        // Add event listeners for rating blocks
        const ratingBlocks = newSkill.querySelectorAll('.battery-block');
        const ratingInput = newSkill.querySelector('.rating-input');
    
        ratingBlocks.forEach(block => {
            block.addEventListener('click', function() {
                const ratingValue = this.getAttribute('data-rating');
                ratingInput.value = ratingValue; // Update hidden input with selected rating
    
                // Update the visual appearance of the blocks based on rating
                ratingBlocks.forEach((b, idx) => {
                    if (idx + 1 <= ratingValue) {
                        b.classList.remove('bg-gray-100');
                        b.classList.add(getColorForRating(idx + 1));
                    } else {
                        b.classList.remove(getColorForRating(idx + 1));
                        b.classList.add('bg-gray-100');
                    }
                });
            });
        });
    
        // Function to get color based on rating
        function getColorForRating(rating) {
            if (rating === 1) return 'bg-red-700';
            if (rating === 2) return 'bg-red-600';
            if (rating === 3) return 'bg-red-500';
            if (rating === 4) return 'bg-yellow-300';
            if (rating === 5) return 'bg-yellow-200';
            if (rating === 6) return 'bg-yellow-100';
            if (rating === 7) return 'bg-green-300';
            if (rating === 8) return 'bg-green-400';
            if (rating === 9) return 'bg-green-500';
            if (rating === 10) return 'bg-green-600';
            return '';
        }
    });
</script>
    
    
    
    



