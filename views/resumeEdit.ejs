<% layout('layouts/boilerplate') %>

<link rel="stylesheet" href="/style/resume.css">
<form id="uploadForm" action="/resume?_method=PUT" method="POST" enctype="multipart/form-data">
    <section class="h-auto flex flex-col items-center justify-center py-8">    
        <div class="grid grid-cols-3 bg-white shadow-lg " style="width: 794px; height: 1121px;">
            <div class="col-span-1 bg-blue-200 flex flex-col">                                    
                <div class=" slider-container relative overflow-hidden w-full" style="height: 33.33%;">
                            <div class="slider flex transition-transform duration-500 ease-in-out w-full h-full" >
                                <% resume.images.forEach(img => { %>
                                   <img src="<%= img.path %>" alt="<%= img._id %>" class="oldImg myProfileImgs w-full object-cover" style="height: 100%;">
                                <% }); %>
                            </div>                        
                            <button type="button" id="prevBtn" class="profileImgBtn h-full absolute left-0 top-1/2 transform -translate-y-1/2 bg-gray-700 text-4xl text-white p-8 ">
                                &#10094;
                            </button>
                            <button type="button" id="nextBtn" class="profileImgBtn h-full absolute right-0 top-1/2 transform -translate-y-1/2 bg-gray-700 text-4xl text-white p-8 ">
                                &#10095;
                            </button>
                            <button type="button" id="deleteImgBtn"  class="absolute bottom-1 bg-red-500 text-white font-bold p-2 rounded-full" style="opacity: 0.75; right: 3.25rem">
                                üóëÔ∏è
                            </button>
                            <button type="button" class="absolute bottom-1 bg-blue-500 rounded-full p-2 shadow-2xl hover:bg-blue-600 focus:outline-none" style="opacity: 0.75; right: 0.25rem">
                                <input type="file" name="profileImgs" id="profileImgs" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" multiple>
                                <img src="/img/UploadIcon.png" alt="Upload" class="w-6 h-6 pb-1">
                            </button>
                             
                </div>                      
                <div>row</div>
                <div>row</div>
            </div>
            <div class="col-span-2 bg-green-200">Column 2</div>
        </div>
        <div class="mt-8 ">
            <button type="button" class="mx-4 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded-full focus:outline-none focus:shadow-outline">
                Cancel
            </button>              
            <button type="submit" class="mx-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full focus:outline-none focus:shadow-outline">
                Submit
            </button>
        </div>        
    </section>>          
</form>
<script>
    document.getElementById('profileImgs').addEventListener('change', function(event) {
        const slider = document.querySelector('.slider');
        const images = document.querySelectorAll('.slider .oldImg');
        const preImgs = document.querySelectorAll('.slider .preImg');        
        const files = event.target.files;
        Array.from(files).forEach(file => {
            const reader = new FileReader();
            reader.onload = function(e) {
                const img = document.createElement('img');
                img.src = e.target.result;
                img.className = 'preImg myProfileImgs w-full object-cover';
                img.style.height = '100%';
                slider.appendChild(img);
                console.log(`Appended image for file: ${file.name}`);
            }
            reader.readAsDataURL(file); 
        });
        if (images.length > 0) {            
            currentIndex = images.length + preImgs.length;
            slider.style.transform = `translateX(-${currentIndex * 100}%)`;
        } 
    });
</script>
<script>
    let currentIndex = 0;

    document.getElementById('nextBtn').addEventListener('click', () => {
        const slider = document.querySelector('.slider');
        const images = document.querySelectorAll('.slider img');
        const totalImages = images.length;  

        if (currentIndex < totalImages - 1) {
            currentIndex++;
        } else {
            currentIndex = 0;
        }
        slider.style.transform = `translateX(-${currentIndex * 100}%)`;
    });

    document.getElementById('prevBtn').addEventListener('click', () => {
        const slider = document.querySelector('.slider');
        const images = document.querySelectorAll('.slider img');
        const totalImages = images.length;

        if (currentIndex > 0) {
            currentIndex--;
        } else {
            currentIndex = totalImages - 1;
        }
        slider.style.transform = `translateX(-${currentIndex * 100}%)`;
    });

    document.getElementById('deleteImgBtn').addEventListener('click', () => {
        const images = document.querySelectorAll('.slider img');

        if (images[currentIndex].classList.contains('preImg')) {
            const slider = document.querySelector('.slider');
            const preImgs = document.querySelectorAll('.slider .preImg');
            const fileInput = document.getElementById('profileImgs');            
            const files = fileInput.files;
            const fileIndex = currentIndex - (images.length - files.length);
            const dataTransfer = new DataTransfer();

            for (let i = 0; i < files.length; i++) {
                if (i !== fileIndex) {
                    dataTransfer.items.add(files[i]); // Add all files except the one to remove
                }
            }

            if (currentIndex > 0) {
                currentIndex--;
                slider.style.transform = `translateX(-${currentIndex * 100}%)`;
            } 
            
            fileInput.files = dataTransfer.files;            

            preImgs[fileIndex].remove();
        } else {
            fetch('/resume/'+images[currentIndex].alt+'?_method=DELETE', {
            method: 'post',
            headers: {
                'Content-Type': 'application/json'
            }/* ,
            body: JSON.stringify({ id: 'your-item-id' }) */  // Optional: Pass any data if needed            
            });
            window.location.href = '/resume'
            
            /* .then(response => {
                if (response.ok) {
                    console.log('Item deleted');                
                } else {
                    console.error('Failed to delete');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            }); */
            
        }       
    });

</script>


